{"version":3,"sources":["context/authContext.js","components/navbar.jsx","components/blog/blogExpander.jsx","components/blog/blog.jsx","pages/blogs.jsx","pages/signUp.jsx","pages/logIn.jsx","pages/createBlog.jsx","pages/updateBlog.jsx","App.js","index.js"],"names":["require","createContext","useState","AuthContext","AuthProvider","props","JSON","parse","localStorage","getItem","isLoggedIn","setIsLoggedIn","user","setUser","Provider","value","login","userDetails","setItem","stringify","logout","window","removeItem","to","children","Header","useContext","useDisclosure","isOpen","onOpen","onClose","as","align","justify","wrap","padding","bg","color","mr","RouterLink","size","letterSpacing","display","base","md","onClick","mt","variant","_hover","borderColor","name","BlogExpander","id","useParams","blogs","setBlogs","requestState","setRequestState","toast","useToast","React","setIsOpen","cancelRef","useRef","useEffect","axios","get","then","res","data","blog","catch","err","maxW","centerContent","columns","p","w","borderWidth","margin","textAlign","ml","fontWeight","textTransform","fontSize","my","lineHeight","description","creator","time","href","colorScheme","leastDestructiveRef","ref","e","preventDefault","delete","headers","token","title","duration","status","isClosable","Blog","maxWidth","substring","Blogs","map","CFaUserAlt","chakra","FaUserAlt","CFaLock","FaLock","SignUp","showPassword","setShowPassword","handleShowClick","email","setEmail","setName","password","setPassword","passwordConfirm","setpasswordConfirm","error","setError","flexDirection","width","height","backgroundColor","justifyContent","alignItems","flexDir","mb","minW","onSubmit","post","response","errors","message","spacing","boxShadow","pointerEvents","placeholder","type","onChange","target","required","autoFocus","h","borderRadius","disabled","LogIn","CreateBlog","setDescription","rows","UpdateBlog","loaded","setLoaded","author","setAuthor","patch","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90c0e983.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nconst {createContext, useState} = require(\"react\");\nconst AuthContext = createContext();\n\nconst AuthProvider = (props) =>{\n     const[isLoggedIn,setIsLoggedIn] = useState(\n         JSON.parse(localStorage.getItem(\"isLoggedIn\")) || false\n     );\n     const[user,setUser] = useState(\n         JSON.parse(localStorage.getItem(\"user\")) || false\n     );\n     const logout=()=>{\n        localStorage.setItem(\"isLoggedIn\",JSON.stringify(false));\n        setIsLoggedIn(false);\n        window.localStorage.removeItem('user');\n        setUser(null);\n        return <Redirect to=\"/\" />\n    };\n     const login = (userDetails) =>{\n         setIsLoggedIn(true);\n         localStorage.setItem(\"isLoggedIn\",JSON.stringify(true));\n         setUser(userDetails);\n         localStorage.setItem(\"user\",JSON.stringify(userDetails));\n     };\n     return(\n        <AuthContext.Provider\n            value={\n                {\n                    isLoggedIn,\n                    login,\n                    user,\n                    logout\n                }\n            }>\n                {\n                    props.children\n                }\n        </AuthContext.Provider>\n    )\n}\n\nexport{ AuthContext,AuthProvider };","import React from \"react\";\nimport {\n  Box,\n  Stack,\n  Heading,\n  Flex,\n  Text,\n  Button,\n  useDisclosure\n} from \"@chakra-ui/react\";\nimport { HamburgerIcon } from \"@chakra-ui/icons\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { AuthContext } from \"../context/authContext\";\nimport { useContext, useState } from \"react\";\n\nconst Header = (props) => {\n  const { isLoggedIn, login, logout, user } = useContext(AuthContext);\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const handleToggle = () => (isOpen ? onClose() : onOpen());\n\n  return (\n    <Flex\n      as=\"nav\"\n      align=\"center\"\n      justify=\"space-between\"\n      wrap=\"wrap\"\n      padding={6}\n      bg=\"teal.500\"\n      color=\"white\"\n      {...props}\n    >\n      <Flex align=\"center\" mr={5}>\n        <Text as = {RouterLink} to=\"/\">\n          <Heading as=\"h1\" size=\"lg\" letterSpacing={\"tighter\"}>\n            Blog Application  \n          </Heading>\n        </Text>\n      </Flex>\n      <Box display={{ base: \"block\", md: \"none\" }} onClick={handleToggle}>\n        <HamburgerIcon />\n      </Box>\n      <Box\n        display={{ base: isOpen ? \"block\" : \"none\", md: \"block\" }}\n        mt={{ base: 4, md: 0 }}\n      >\n        {\n          user && (\n            <Button\n              variant=\"outline\"\n              _hover={{ bg: \"teal.700\", borderColor: \"teal.700\" }}\n            >\n              {\n                user.name\n              }\n            </Button>\n          )\n        }\n        {\n          isLoggedIn && (<Button as = {RouterLink} to=\"/blogs\"\n            variant=\"outline\"\n            _hover={{ bg: \"teal.700\", borderColor: \"teal.700\" }}\n          >\n            Create Blog\n          </Button>)\n        }\n        {\n          !isLoggedIn && (<Button as = {RouterLink} to=\"/login\"\n            variant=\"outline\"\n            _hover={{ bg: \"teal.700\", borderColor: \"teal.700\" }}\n          >\n            LogIn or SignUp\n          </Button>)\n        }\n        {\n          isLoggedIn && (<Button onClick={logout}\n          variant=\"outline\"\n          _hover={{ bg: \"teal.700\", borderColor: \"teal.700\" }}\n          >\n            Log Out\n          </Button>)\n        }\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport {\n  Box,\n  Flex,\n  AspectRatio,\n  Image,\n  Text,\n  Link,\n  Button,\n  Stack,\n  Collapse,\n  Container,\n  Spacer,\n  SimpleGrid,\n  ChakraProvider,\n  useToast,\n  AlertDialog,\n  AlertDialogBody,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogContent,\n  AlertDialogOverlay,\n} from \"@chakra-ui/react\";\nimport { useContext, useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { useParams } from 'react-router-dom';\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport Blog from \"./blog\";\nimport { AuthContext } from \"../../context/authContext\";\nimport { Redirect, useHistory } from \"react-router-dom\";\n\nconst BlogExpander= (props) =>{\n    const { isLoggedIn, login, logout, user } = useContext(AuthContext);\n    const { id } = useParams();\n    const [blogs, setBlogs] = useState([]);\n    const [requestState, setRequestState] = useState(false);\n    const toast = useToast(); \n    const [isOpen, setIsOpen] = React.useState(false)\n    const onClose = () => setIsOpen(false)\n    const cancelRef = React.useRef()\n\n    useEffect(() => {\n        axios.get(`/api/v1/blogs/${id}`)\n        .then((res) => {\n            setBlogs(res.data.blog);\n        })\n        .catch((err) => {\n\n        });\n    },[]);\n\n    const deleteBlog = (e) =>{\n      e.preventDefault();\n      setRequestState(\"loading\");\n      axios.delete(`/api/v1/blogs/${id}`,{ headers:{\"Authorization\" : `Bearer ${user.token}`}})\n      .then((res) => {\n          setRequestState(\"completed\");\n          toast({\n              title: \"Blog successfully deleted!!\",\n              duration: 4000,\n              status: \"success\",\n              isClosable: true,\n          });\n        }).catch((err) => {\n            setRequestState(\"error\");\n      })\n    }\n  return (\n      <ChakraProvider>\n        <Container maxW=\"80rem\" centerContent>\n          <SimpleGrid columns={[1, 1, 1, 1]}>\n              <Box \n                p={4}\n                w=\"1000px\"\n                display={{ md: \"flex\" }}\n                //maxWidth=\"62rem\"\n                borderWidth={1}\n                margin={2}\n                p=\"2rem\"\n              >\n                <Stack\n                  align={{ base: \"center\", md: \"stretch\" }}\n                  textAlign={{ base: \"center\", md: \"left\" }}\n                  mt={{ base: 4, md: 0 }}\n                  ml={{ md: 6 }}\n                >\n                  <Text\n                    fontWeight=\"bold\"\n                    textTransform=\"uppercase\"\n                    fontSize=\"lg\"\n                    letterSpacing=\"wide\"\n                    color=\"teal.600\"\n                  >\n                    {blogs.name}\n                  </Text>\n                  <Text\n                    my={1}\n                    display=\"block\"\n                    fontSize=\"md\"\n                    lineHeight=\"normal\"\n                  >\n                    {blogs.description}\n                  </Text>\n\n                  <Text my={2} color=\"gray.500\">\n                    {\"Author: \" + blogs.creator}\n                  </Text>\n                  <Text my={2} color=\"gray.500\">\n                    {\"Created at: \" + blogs.time}\n                  </Text>\n                    {\n                      isLoggedIn && blogs.creator === user.name && (<Button\n                          w=\"920px\"\n                          variant=\"outline\"\n                          _hover={{ bg: \"teal.700\", borderColor: \"teal.700\" }}\n                        >\n                        <a href ={'/blogs/' + id}> Update </a> \n                      </Button>)\n                    }\n                    {\n                      requestState === \"error\" && (\n                        <Text display=\"block\" fontSize=\"sm\" color=\"red\">\n                          Something Went Wrong!! Please Try Again.\n                        </Text>\n                      )\n                    }\n                    {\n                        requestState === \"completed\" && (<Redirect to='/'/>)\n                    }\n                    {\n                      isLoggedIn && blogs.creator === user.name &&(<><Button colorScheme=\"red\" w=\"920px\" variant=\"outline\"\n                        _hover={{ bg: \"red.200\", borderColor: \"red.200\" }} onClick={() => setIsOpen(true)}>\n                        Delete\n                      </Button>\n              \n                      <AlertDialog\n                        isOpen={isOpen}\n                        leastDestructiveRef={cancelRef}\n                        onClose={onClose}\n                      >\n                        <AlertDialogOverlay>\n                          <AlertDialogContent>\n                            <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n                              Delete\n                            </AlertDialogHeader>\n                \n                            <AlertDialogBody>\n                              Are you sure to delete this blog? You can't undo this action afterwards.\n                            </AlertDialogBody>\n                \n                            <AlertDialogFooter>\n                              <Button ref={cancelRef} onClick={onClose}>\n                                Cancel\n                              </Button>\n                              <Button colorScheme=\"red\" onClick={deleteBlog} ml={3}>\n                                Delete\n                              </Button>\n                            </AlertDialogFooter>\n                          </AlertDialogContent>\n                        </AlertDialogOverlay>\n                     </AlertDialog>\n                     </>)\n                    }\n                </Stack>\n             </Box>\n          </SimpleGrid>\n        </Container>\n      </ChakraProvider>\n   );\n}\nexport default BlogExpander;","import React from \"react\";\nimport {\n  Box,\n  Flex,\n  AspectRatio,\n  Image,\n  Text,\n  Link,\n  Button,\n  Stack,\n  Collapse,\n  Container,\n  Spacer\n} from \"@chakra-ui/react\";\nimport { useContext, useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport BlogExpander from \"./blogExpander\";\n\nfunction Blog(props) {\n  const { id,name, description, creator ,time} = props;\n  const [show, setShow] = React.useState(false);\n  const handleToggle = () => setShow(!show);\n  return (\n      <Box\n        p={4}\n        display={{ md: \"flex\" }}\n        maxWidth=\"62rem\"\n        borderWidth={1}\n        margin={2}\n      >\n        <Stack\n          align={{ base: \"center\", md: \"stretch\" }}\n          textAlign={{ base: \"center\", md: \"left\" }}\n          mt={{ base: 4, md: 0 }}\n          ml={{ md: 6 }}\n        >\n          <Text\n            fontWeight=\"bold\"\n            textTransform=\"uppercase\"\n            fontSize=\"lg\"\n            letterSpacing=\"wide\"\n            color=\"teal.600\"\n          >\n              {name}\n          </Text>\n          <Text\n            my={1}\n            display=\"block\"\n            fontSize=\"md\"\n            lineHeight=\"normal\"\n          >\n              {description.substring(0, 200)+\"....\"}\n          </Text>\n\n          <Text my={2} color=\"gray.500\">\n            {\"Author: \" + creator}\n          </Text>\n          <Text my={2} color=\"gray.500\">\n            {\"Created at: \" +time}\n          </Text>\n          <Button  maxWidth=\"100px\" my={2} align-right>\n            <a href ={'/blogs/view/' + id }> Show More</a> \n          </Button>\n        </Stack>\n    </Box>\n  );\n}\nexport default Blog;","import React from \"react\";\nimport axios from \"axios\";\nimport { Center, Box, Heading } from \"@chakra-ui/react\";\nimport { useState, useEffect } from \"react\";\nimport Blog from \"../components/blog/blog\";\nimport { ChakraProvider, SimpleGrid, Container } from \"@chakra-ui/react\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst Blogs = (props) => {\n    const [blogs, setBlogs] = useState([]);\n    useEffect(() => {\n        axios.get('/api/v1/blogs')\n        .then((res) => {\n            setBlogs(res.data.blog);\n        })\n        .catch((err) => {\n\n        });\n    },[]);\n\n    return (\n       <ChakraProvider>\n          <Container maxW=\"80rem\" centerContent>\n            <SimpleGrid columns={[1, 1, 1, 1]}>\n              {blogs.map(function (blog) {\n                const { id, name, description, creator ,time} = blog;\n                return (\n                  <Blog\n                    id ={id}\n                    name={name}\n                    description={description}\n                    creator={creator}\n                    time = {time}\n                  />\n                );\n              })}\n            </SimpleGrid>\n          </Container>\n        </ChakraProvider>\n      );\n}\n\nexport default Blogs;","import {\n    Flex,\n    Heading,\n    Input,\n    Button,\n    InputGroup,\n    Stack,\n    InputLeftElement,\n    chakra,\n    Box,\n    Link,\n    Avatar,\n    FormControl,\n    useToast,\n    FormHelperText,\n    InputRightElement,\n    Text,\n    Spinner\n  } from \"@chakra-ui/react\";\n  import { FaUserAlt, FaLock } from \"react-icons/fa\";\n  import { useContext, useState } from \"react\";\n  import axios from \"axios\";\n  import { Redirect, useHistory } from \"react-router-dom\";\n  import { AuthContext } from \"../context/authContext\";\n  import { Link as RouterLink } from \"react-router-dom\";\n\n  const CFaUserAlt = chakra(FaUserAlt);\n  const CFaLock = chakra(FaLock);\n\n  const SignUp = (props) => {\n    const [showPassword, setShowPassword] = useState(false);\n    const handleShowClick = () => setShowPassword(!showPassword);\n    const [email, setEmail] = useState();\n    const { isLoggedIn, login } = useContext(AuthContext);\n    const [name, setName] = useState();\n    const [password, setPassword] = useState();\n    const [passwordConfirm, setpasswordConfirm] = useState();\n    const [requestState, setRequestState] = useState(\"not-requested\");\n    const [error,setError] = useState();\n    const toast = useToast(); \n\n    const signUp = (e) => {\n        e.preventDefault();\n        setRequestState(\"loading\");\n        axios.post('/api/v1/users/signup', {name,email,password,passwordConfirm})\n        .then((res) => {\n            setRequestState(\"completed\");\n            toast({\n                title: \"You Successfully Create your Account!! Please Login to Continue!!\",\n                duration: 4000,\n                status: \"success\",\n                isClosable: true,\n            });\n        }).catch((err) => {\n            if(err.response.data.errors){\n                setError(err.response.data.errors[0]);\n            }\n            else if(err.response.data.message.message){\n                setError(err.response.data.message.errors.passwordConfirm.message);\n            }          \n            else{\n                setError(\"User name already exists\")\n            }\n            setRequestState(\"error\");\n        })\n    }\n\n  if (isLoggedIn){\n    return <Redirect to=\"/\" />;\n  }\n  else\n    return (\n        <Flex\n            flexDirection=\"column\"\n            width=\"100wh\"\n            height=\"100vh\"\n            backgroundColor=\"gray.200\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n        >\n            <Stack\n                flexDir=\"column\"\n                mb=\"2\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n            >\n                <Avatar bg=\"teal.500\" />\n                <Heading color=\"teal.400\">Welcome</Heading>\n                <Box minW={{ base: \"90%\", md: \"468px\" }}>\n                    <form onSubmit={signUp}>\n                        <Stack\n                            spacing={4}\n                            p=\"1rem\"\n                            backgroundColor=\"whiteAlpha.900\"\n                            boxShadow=\"md\"\n                        >\n                            <FormControl>\n                                <InputGroup>\n                                    <InputLeftElement\n                                        pointerEvents=\"none\"\n                                        children={<CFaUserAlt color=\"gray.300\" />}\n                                    />\n                                    <Input \n                                        placeholder=\"Name\"\n                                        type=\"text\"\n                                        name=\"name\"\n                                        onChange={(e) => setName(e.target.value)}\n                                        required\n                                        autoFocus\n                                    />\n                                </InputGroup>\n                            </FormControl>\n                            <FormControl>\n                                <InputGroup>\n                                    <InputLeftElement\n                                        pointerEvents=\"none\"\n                                        children={<CFaUserAlt color=\"gray.300\" />}\n                                    />\n                                    <Input \n                                        placeholder=\"Email\"\n                                        type=\"email\"\n                                        //m={1}\n                                        name=\"email\"\n                                        onChange={(e) => setEmail(e.target.value)}\n                                        required\n                                    />\n                                </InputGroup>\n                            </FormControl>\n                            <FormControl>\n                                <InputGroup>\n                                    <InputLeftElement\n                                        pointerEvents=\"none\"\n                                        color=\"gray.300\"\n                                        children={<CFaLock color=\"gray.300\" />}\n                                    />\n                                    <Input\n                                        type={showPassword ? \"text\" : \"password\"}\n                                        placeholder=\"Password\"\n                                        name=\"password\"\n                                        onChange={(e) => setPassword(e.target.value)}\n                                        required\n                                    />\n                                    <InputRightElement width=\"4.5rem\">\n                                        <Button h=\"1.75rem\" size=\"sm\" onClick={handleShowClick}>\n                                        {showPassword ? \"Hide\" : \"Show\"}\n                                        </Button>\n                                    </InputRightElement>\n                                </InputGroup>\n                            </FormControl>\n                            <FormControl>\n                                <InputGroup>\n                                    <InputLeftElement\n                                        pointerEvents=\"none\"\n                                        color=\"gray.300\"\n                                        children={<CFaLock color=\"gray.300\" />}\n                                    />\n                                    <Input\n                                        type={showPassword ? \"text\" : \"password\"}\n                                        placeholder=\"Confirm Password\"\n                                        name=\"passwordConfirm\"\n                                        onChange={(e) => setpasswordConfirm(e.target.value)}\n                                        required\n                                    />\n                                    <InputRightElement width=\"4.5rem\">\n                                        <Button h=\"1.75rem\" size=\"sm\" onClick={handleShowClick}>\n                                        {showPassword ? \"Hide\" : \"Show\"}\n                                        </Button>\n                                    </InputRightElement>\n                                </InputGroup>\n                            </FormControl>\n                            {\n                                requestState === \"error\" && (\n                                <Text display=\"block\" fontSize=\"sm\" color=\"red\">\n                                {error}\n                                </Text>\n                            )}\n                            {\n                                requestState === \"completed\" && (<Redirect to=\"/login\" />)\n                            }\n                            <Button\n                                borderRadius={0}\n                                type=\"submit\"\n                                variant=\"solid\"\n                                colorScheme=\"teal\"\n                                width=\"full\"\n                                disabled={requestState === \"loading\" ? 1 : 0}\n                            >\n                            {requestState === \"loading\" && <Spinner mr={3} />}SignUp\n                            </Button>\n                        </Stack>\n                    </form>\n                </Box>\n            </Stack>\n        </Flex>\n    );\n  }\n  export default SignUp;","import { AuthContext } from \"../context/authContext\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport {\n    Flex,\n    Heading,\n    Input,\n    Button,\n    InputGroup,\n    Stack,\n    InputLeftElement,\n    chakra,\n    Box,\n    Link,\n    Avatar,\n    FormControl,\n    useToast,\n    FormHelperText,\n    InputRightElement,\n    Text\n  } from \"@chakra-ui/react\";\nimport { FaUserAlt, FaLock } from \"react-icons/fa\";\nimport { useContext, useState } from \"react\";\nimport axios from \"axios\";\n\nconst CFaUserAlt = chakra(FaUserAlt);\nconst CFaLock = chakra(FaLock);\n\nconst LogIn = (props) => {\n    const [showPassword, setShowPassword] = useState(false);\n    const handleShowClick = () => setShowPassword(!showPassword);\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n    const [requestState, setRequestState] = useState(\"not-requested\");\n    const toast = useToast();\n    const { isLoggedIn, login } = useContext(AuthContext);\n\n    const logIn = (e) =>{\n        e.preventDefault();\n        setRequestState(\"loading\");\n        axios.post('/api/v1/users/login',{email,password})\n        .then((res) => {\n            setRequestState(\"completed\");\n            login(res.data);\n            toast({\n                title: \" You Logged in Successfully!!\",\n                duration: 4000,\n                status: \"success\",\n                isClosable: true,\n            })\n        }).catch((err) => {\n            setRequestState(\"error\");\n        })\n    }\n    if (isLoggedIn){\n        return <Redirect to=\"/\" />;\n    }\n    else\n        return (\n            <Flex\n                flexDirection=\"column\"\n                width=\"100wh\"\n                height=\"100vh\"\n                backgroundColor=\"gray.200\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n            >\n                <Stack\n                    flexDir=\"column\"\n                    mb=\"2\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                >\n                    <Avatar bg=\"teal.500\" />\n                    <Heading color=\"teal.400\">Welcome!</Heading>\n                    <Box minW={{ base: \"90%\", md: \"468px\" }}>\n                        <form onSubmit={logIn}>\n                            <Stack\n                                spacing={4}\n                                p=\"1rem\"\n                                backgroundColor=\"whiteAlpha.900\"\n                                boxShadow=\"md\"\n                            >\n                                <FormControl>\n                                    <InputGroup>\n                                        <InputLeftElement\n                                            pointerEvents=\"none\"\n                                            children={<CFaUserAlt color=\"gray.300\" />}\n                                        />\n                                        <Input type=\"text\"\n                                            placeholder=\"Email\"\n                                            name=\"email\"\n                                            onChange={(e) => setEmail(e.target.value)}\n                                            required\n                                        />\n                                    </InputGroup>\n                                </FormControl>\n                                <FormControl>\n                                    <InputGroup>\n                                        <InputLeftElement\n                                            pointerEvents=\"none\"\n                                            color=\"gray.300\"\n                                            children={<CFaLock color=\"gray.300\" />}\n                                        />\n                                        <Input\n                                            type={showPassword ? \"text\" : \"password\"}\n                                            placeholder=\"Password\"\n                                            name=\"password\"\n                                            onChange={(e) => setPassword(e.target.value)}\n                                            required\n                                        />\n                                        <InputRightElement width=\"4.5rem\">\n                                            <Button h=\"1.75rem\" size=\"sm\" onClick={handleShowClick}>\n                                            {showPassword ? \"Hide\" : \"Show\"}\n                                            </Button>\n                                        </InputRightElement>\n                                    </InputGroup>\n                                </FormControl>\n                                {\n                                    requestState === \"error\" && (\n                                    <Text display=\"block\" fontSize=\"sm\" color=\"red\">\n                                    Wrong Email or Password!!!\n                                    </Text>\n                                )}\n                                <Button\n                                    borderRadius={0}\n                                    type=\"submit\"\n                                    variant=\"solid\"\n                                    colorScheme=\"teal\"\n                                    width=\"full\"\n                                >\n                                    Login\n                                </Button>\n                            </Stack>\n                        </form>\n                    </Box>\n                </Stack>\n                <Box>\n                    New to us?{\" \"}\n                    <Link color=\"teal.500\" href=\"/signup\">\n                    Sign Up\n                    </Link>\n                </Box>\n            </Flex> \n    );\n}\n\nexport default LogIn;","import React from \"react\"\nimport {\n    Flex,\n    Heading,\n    Input,\n    Button,\n    InputGroup,\n    Stack,\n    InputLeftElement,\n    chakra,\n    Box,\n    Link,\n    Avatar,\n    FormControl,\n    useToast,\n    FormHelperText,\n    InputRightElement,\n    Text,\n    Spinner,\n    Textarea\n}from \"@chakra-ui/react\";\n  import { FaUserAlt, FaLock } from \"react-icons/fa\";\n  import { AuthContext } from \"../context/authContext\";\n  import { useContext, useState } from \"react\";\n  import { Redirect, useHistory } from \"react-router-dom\";\n  import axios from \"axios\";\n\n  const CFaUserAlt = chakra(FaUserAlt);\n  const CFaLock = chakra(FaLock);\n  \n  const CreateBlog = (props) => {\n    const { isLoggedIn, login ,user} = useContext(AuthContext);\n    const [name,setName] = useState();\n    const [description,setDescription] = useState();\n    const [requestState, setRequestState] = useState(\"not-requested\");\n    const [error,setError] = useState();\n    const toast = useToast(); \n\n    const createBlog = (e) => {\n        e.preventDefault();\n        setRequestState(\"loading\");\n        axios.post('/api/v1/blogs',{name,description},{ headers:{\"Authorization\" : `Bearer ${user.token}`}})\n        .then((res) => {\n            setRequestState(\"completed\");\n            toast({\n                title: \"Blog successfully created!!\",\n                duration: 4000,\n                status: \"success\",\n                isClosable: true,\n            });\n        }).catch((err) => {\n            setError(err.response.data.errors[0]);\n            setRequestState(\"error\");\n        })\n    }\n    if(!isLoggedIn){\n        return <Redirect to=\"/\" />;\n    }\n    else{\n        return (\n            <form onSubmit={createBlog}>\n                <Stack\n                spacing={4}\n                p=\"5rem\"\n                backgroundColor=\"whiteAlpha.900\"\n                boxShadow=\"md\"\n                >\n                    <Textarea\n                        rows=\"3\"\n                        placeholder=\"Blog Title\"\n                        type = \"text\"\n                        name = \"name\"\n                        onChange={(e) => setName(e.target.value)}\n                        required\n                        size=\"lg\"\n                    />\n                    <Textarea\n                        rows=\"10\"\n                        placeholder=\"Blog Description\"\n                        type=\"text\"\n                        name= \"description\"\n                        onChange={(e) => setDescription(e.target.value)}\n                        required\n                        size=\"lg\"\n                    />\n                    {\n                        requestState === \"error\" && (\n                        <Text display=\"block\" fontSize=\"sm\" color=\"red\">\n                        {error}\n                        </Text>\n                    )}\n                    {\n                        requestState === \"completed\" && (<Redirect to=\"/\" />)\n                    }\n                    <Button\n                        borderRadius={0}\n                        type=\"submit\"\n                        variant=\"solid\"\n                        colorScheme=\"teal\"\n                        width=\"full\"\n                    >\n                        SUBMIT\n                    </Button>\n                </Stack>\n            </form>\n        )\n    }\n}\n\nexport default CreateBlog;","import {\n    Flex,\n    Heading,\n    Input,\n    Button,\n    InputGroup,\n    Stack,\n    InputLeftElement,\n    chakra,\n    Box,\n    Link,\n    Avatar,\n    FormControl,\n    useToast,\n    FormHelperText,\n    InputRightElement,\n    Text,\n    Spinner,\n    Textarea\n} from \"@chakra-ui/react\";\nimport { useContext, useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { useParams } from 'react-router-dom';\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../context/authContext\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { FaUserAlt, FaLock } from \"react-icons/fa\";\nconst CFaUserAlt = chakra(FaUserAlt);\nconst CFaLock = chakra(FaLock);\n\nconst UpdateBlog = (props) =>{\n    const [loaded,setLoaded] = useState(false);\n    const  id  = useParams().id;\n    const [blogs, setBlogs] = useState([]);\n    const [name,setName] = useState();\n    const [author,setAuthor] = useState();\n    const [description,setDescription] = useState();\n    const [requestState, setRequestState] = useState(false);\n    const [error,setError] = useState();\n    const toast = useToast(); \n    const { isLoggedIn, login ,user} = useContext(AuthContext);\n    useEffect(() => {\n        axios.get(`/api/v1/blogs/${id}`)\n        .then((res) => {\n            setBlogs(res.data.blog)\n            setName(res.data.blog.name);\n            setDescription(res.data.blog.description);\n            setAuthor(res.data.blog.creator);\n            setRequestState(true)\n            setLoaded(true);\n        })\n        .catch((err) => {\n\n        });\n    },[]);\n\n    const updateBlog = (e) =>{\n        e.preventDefault();\n        setRequestState(\"loading\");\n        axios.patch(`/api/v1/blogs/${id}`,{name,description},{ headers:{\"Authorization\" : `Bearer ${user.token}`}})\n        .then((res) => {\n            setRequestState(\"completed\");\n            toast({\n                title: \"Blog successfully updated!!\",\n                duration: 4000,\n                status: \"success\",\n                isClosable: true,\n            });\n        }).catch((err) => {\n            setError(err.response.data.errors[0]);\n            setRequestState(\"error\");\n        })\n    }\n    if(!loaded){\n        return <h1>loading...</h1>\n    }\n    else {\n        if(!isLoggedIn || author !== user.name){\n            return <Redirect to={'/blogs/view/' + id }/>\n        }\n        else{\n            return (\n                <form onSubmit={updateBlog}>\n                    <Stack\n                        spacing={4}\n                        p=\"5rem\"\n                        backgroundColor=\"whiteAlpha.900\"\n                        boxShadow=\"md\"\n                    >\n                        <Textarea\n                            rows=\"3\"\n                            type=\"text\"\n                            name=\"name\"\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                            autoFocus\n                            size=\"lg\"\n                        />\n                        <Textarea\n                            rows=\"10\"\n                            value = {description}\n                            type=\"text\"\n                            name= \"description\"\n                            onChange={(e) => setDescription(e.target.value)}\n                            size=\"lg\"\n                        />\n                        {\n                            requestState === \"error\" && (\n                            <Text display=\"block\" fontSize=\"sm\" color=\"red\">\n                            {error}\n                            </Text>\n                        )}\n                        {\n                            requestState === \"completed\" && (<Redirect to={'/blogs/view/' + id }/>)\n                        }\n                        <Button\n                            borderRadius={0}\n                            type=\"submit\"\n                            variant=\"solid\"\n                            colorScheme=\"teal\"\n                            width=\"full\"\n                        >\n                        UPDATE\n                        </Button>\n                    </Stack>\n                </form>\n            )\n        } \n    }   \n}\nexport default UpdateBlog;","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport './App.css';\nimport Footer from './components/footer';\nimport Header from './components/navbar';\nimport Blogs from './pages/blogs';\nimport SignUp from \"./pages/signUp\";\nimport LogIn from \"./pages/logIn\";\nimport CreateBlog from \"./pages/createBlog\";\nimport BlogExpander from \"./components/blog/blogExpander\";\nimport UpdateBlog from \"./pages/updateBlog\";\n\n\nfunction App() {\n  return (\n      <Router>\n          <Header />\n          <Switch>\n              <Route exact path=\"/signup\" component={SignUp} />\n              <Route exact path=\"/login\" component={LogIn} />\n              <Route exact path=\"/\" component={Blogs} />\n              <Route exact path=\"/blogs\" component={CreateBlog} />\n              <Route exact path=\"/blogs/view/:id\" component={BlogExpander}/>\n              <Route exact path=\"/blogs/:id\" component={UpdateBlog}/>\n          </Switch>\n          {/* <Footer /> */}\n      </Router>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ChakraProvider } from \"@chakra-ui/react\"\nimport {AuthProvider} from './context/authContext'\n\nReactDOM.render(\n  <React.StrictMode>\n   <ChakraProvider>\n       <AuthProvider>\n            <App />\n        </AuthProvider>\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}